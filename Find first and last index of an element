// Leetcode link : https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/


// JavaScript Code :
function hii(){
    console.log("hii");
}


// Java Code :

// Brute force approach :

class HelloWorld {
    
    public static int [] bruteForceSearch(int [] arr, int target){
        int [] ans = {-1,-1};
        
        int start = 0;
        int end = arr.length-1;
        
        while((arr[start] != target || arr[end] != target) && start < end){
            if(arr[start] < target){
                start++;
            }
            if(arr[end] > target){
                end--;
            }
            
            if(arr[start] == target && arr[end] == target){
                ans[0] = start;
                ans[1] = end;
                
                return ans;
            }
        }
        
        return ans;
    }
    
    public static void main(String[] args) {
        int [] arr = {1,2,4,5,5,5,5,8,9,11};
        int target = 5;
        int [] res = bruteForceSearch(arr, target);
        
        for(int i = 0; i < res.length; i++){
            System.out.println(res[i]);
        }
    }
}



// Optimal approach :

class HelloWorld {
    
    public static int binarySearch(int [] arr, int target, boolean findLeft){
        
        int start = 0;
        int end = arr.length-1;
        int ans = -1;
        
        
       while(start <= end){
           int mid = start + (end-start)/2;
           
           if(arr[mid] == target){
               
               ans = mid;
               
               if(findLeft){
                   end = mid-1;
               }else{
                   start = mid+1;
               }
           }else if(arr[mid] < target){
               start = mid+1;
           }else{
               end = mid-1;
           }
       }
       
       return ans;
    }
    
    public static void main(String[] args) {
        int [] arr = {1,2,4,5,5,5,5,8,9,11};
        int target = 5;
        int [] res = {-1,-1};
        res[0] = binarySearch(arr, target, true);
        
        if(res[0] != -1){
            res[1] = binarySearch(arr, target, false);
        }
        
        for(int i = 0; i < res.length; i++){
            System.out.println(res[i]);
        }
    }
}