// In this problem we are allowed to move in all the directions.

// Java Code :

public class HelloWorld{

     public static void main(String []args){
         boolean [][] matrix = {
             {true, true, true},
             {true, true, true},
             {true, true, true}
         };
        printAllWays(matrix,"",0,0);
     }
     
     static void printAllWays(boolean [][] maze,String p, int r, int c){
         
         if(r == maze.length-1 && c == maze[0].length-1){
             System.out.println(p);
             return;
         }
         
         if(!maze[r][c]){
             return;
         }
         
         maze[r][c] = false;
         
         if(r < maze.length-1){
             printAllWays(maze, p + "D", r + 1, c);
         }
         
         if(c < maze[0].length-1){
             printAllWays(maze, p + "R", r, c+1);
         }
         
         if(r > 0){
             printAllWays(maze, p + 'U', r-1, c);
         }
         
         if(c > 0){
             printAllWays(maze, p + "L", r, c-1);
         }
         
         maze[r][c] = true;
     }
}

// The maze problem is a good way to problem to learn backtracking