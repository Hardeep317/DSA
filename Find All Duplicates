// leetcode : https://leetcode.com/problems/find-all-duplicates-in-an-array/description/

// JavaScript Code :

var findDuplicates = function(nums) {
    let ans = [];

    cyclicSort(nums);

    for(let i = 0; i < nums.length; i++){
        if(nums[i] !== i+1){
            ans.push(nums[i]);
        }
    }
    return ans;
};

function cyclicSort(arr){
    let i = 0;

    while(i < arr.length){
        let correct = arr[i]-1;

        if(arr[i] !== arr[correct]){
            let temp = arr[i];
            arr[i] = arr[correct];
            arr[correct] = temp;
        }else{
            i++;
        }
    }
}


// Java Code :

class Solution {

    void cyclicSort(int [] arr){
        int i = 0; 

        while(i < arr.length){
            int correct = arr[i]-1;

            if(arr[i] != arr[correct]){
                int temp = arr[i];
                arr[i] = arr[correct];
                arr[correct] = temp;
            }else{
                i++;
            }
        }
    }

    public List<Integer> findDuplicates(int[] nums) {
        
        List <Integer> list = new ArrayList<>();
        cyclicSort(nums);

        for(int i = 0; i < nums.length; i++){
            if(nums[i] != i+1){
                list.add(nums[i]);
            }
        }

        return list;
    }
}